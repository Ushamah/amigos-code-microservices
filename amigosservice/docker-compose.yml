services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: amigoscode
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  mysql:
    container_name: mysql
    image: mysql
    restart: always
    environment:
      MYSQL_DATABASE: 'amigoscode'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'amigoscode'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - mysql

  # The zipkin process services the UI, and also exposes a POST endpoint that
  # instrumentation can send trace data to. Scribe is disabled by default.
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - "9411:9411"
      # Uncomment if you set SCRIBE_ENABLED=true
      # - 9410:9410

  rabbitmq:
    image: rabbitmq:3.9.11-management-alpine
    container_name: rabbitmq
    ports:
      #This is for the applications to use rabbitmq
      - "5672:5672"
      # this is the management port
      - "15672:15672"
    networks:
      - spring

#  eureka-server:
#    image: wamush92/eureka-server:latest
#    container_name: eureka-server
#    ports:
#      - "8761:8761"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    networks:
#      - spring
#    depends_on:
#      - zipkin
#
#
#  api-gateway:
#    image: wamush92/api-gateway:latest
#    container_name: api-gateway
#    ports:
#      - "8082:8082"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    networks:
#      - spring
#    depends_on:
#      - zipkin
#      - eureka-server


  customer:
    image: wamush92/customer:latest
    container_name: customer
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin
      - rabbitmq
      - postgres


  fraud:
    image: wamush92/fraud:latest
    container_name: fraud
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin
      - rabbitmq
      - postgres


  notification:
    image: wamush92/notification:latest
    container_name: notification
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin
      - rabbitmq
      - postgres

networks:
  spring:
    driver: bridge
  mysql:
    driver: bridge
  postgres:
    driver: bridge

volumes:
  mysql:
  postgres:
  pgadmin:


